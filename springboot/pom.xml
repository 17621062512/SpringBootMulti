<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>
    <parent>
        <groupId>com.leemon</groupId>
        <artifactId>Spring-Boot-Multi</artifactId>
        <version>V1.0</version>
        <relativePath/> <!-- lookup parent from repository -->
    </parent>

    <groupId>com.leemon</groupId>
    <artifactId>springboot</artifactId>
    <version>0.0.1-SNAPSHOT</version>
    <packaging>jar</packaging>
    <name>springboot</name>
    <description>Demo project for Spring Boot</description>

    <dependencies>
        <!--Swagger2 依赖 自动生成API文档-->
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger2</artifactId>
            <version>2.7.0</version>
        </dependency>
        <dependency>
            <groupId>io.springfox</groupId>
            <artifactId>springfox-swagger-ui</artifactId>
            <version>2.7.0</version>
        </dependency>
    </dependencies>



    <build>
        <!-- 使用指定的filter进行过滤，在执行mvn命令的时候带上-Pprod就代表生产环境，就会加载生产环境的properties，-Pdeve就代表开发环境（默认） -->
        <filters>
            <filter>src/main/resources/${active}.properties</filter>
        </filters>

        <!-- 资源文件位置src/main/resources/,这下面的资源文件的${}会全部被替换成filter中的标签内容。
                        directory指定的value会作为classes的资源跟目录，
                        比如指定:src/main/resources/，则classes下会出现jdbc等包，
                        若指定:src/main/resources/jdbc/，则classes下直接出现jdbc包下的文件，不会额外出现jdbc等其他包结构。因为他把jdbc作为了根目录
                -->
        <resources>
            <resource>
                <directory>src/main/resources</directory>
                <filtering>true</filtering>
                <!--
                   exclude可以排除指定文件，支持通配符 ,匹配项不会生成到classes目录下，路径是以directory开始的

              -->
                <!--<excludes>-->
                <!--<exclude>test.properties</exclude>-->
                <!--</excludes>-->
            </resource>
        </resources>

        <plugins>
            <plugin>
                <groupId>org.springframework.boot</groupId>
                <artifactId>spring-boot-maven-plugin</artifactId>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <profile>
            <id>dev</id>
            <!--默认环境-->
            <!--<activation>-->
                <!--<activeByDefault>true</activeByDefault>-->
            <!--</activation>-->
            <properties>
                <active>develop</active>
            </properties>
        </profile>

        <profile>
            <id>pro</id>
            <properties>
                <active>production</active>
            </properties>
        </profile>

        <profile>
            <id>test</id>
            <properties>
                <active>test</active>
            </properties>
        </profile>
    </profiles>

</project>
